{"version":3,"file":"categories/index.js","mappings":"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","sources":["webpack://ng-gutenberg/./node_modules/@wordpress/icons/build-module/library/category.js","webpack://ng-gutenberg/./node_modules/@wordpress/icons/build-module/library/pin.js","webpack://ng-gutenberg/./src/categories/edit.js","webpack://ng-gutenberg/./src/categories/utils.js","webpack://ng-gutenberg/./node_modules/classnames/index.js","webpack://ng-gutenberg/external window \"lodash\"","webpack://ng-gutenberg/external window [\"wp\",\"blockEditor\"]","webpack://ng-gutenberg/external window [\"wp\",\"blocks\"]","webpack://ng-gutenberg/external window [\"wp\",\"components\"]","webpack://ng-gutenberg/external window [\"wp\",\"compose\"]","webpack://ng-gutenberg/external window [\"wp\",\"coreData\"]","webpack://ng-gutenberg/external window [\"wp\",\"data\"]","webpack://ng-gutenberg/external window [\"wp\",\"element\"]","webpack://ng-gutenberg/external window [\"wp\",\"i18n\"]","webpack://ng-gutenberg/external window [\"wp\",\"primitives\"]","webpack://ng-gutenberg/webpack/bootstrap","webpack://ng-gutenberg/webpack/runtime/compat get default export","webpack://ng-gutenberg/webpack/runtime/define property getters","webpack://ng-gutenberg/webpack/runtime/hasOwnProperty shorthand","webpack://ng-gutenberg/webpack/runtime/make namespace object","webpack://ng-gutenberg/./src/categories/index.js"],"sourcesContent":["import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst category = createElement(SVG, {\n  viewBox: \"0 0 24 24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, createElement(Path, {\n  d: \"M6 5.5h3a.5.5 0 01.5.5v3a.5.5 0 01-.5.5H6a.5.5 0 01-.5-.5V6a.5.5 0 01.5-.5zM4 6a2 2 0 012-2h3a2 2 0 012 2v3a2 2 0 01-2 2H6a2 2 0 01-2-2V6zm11-.5h3a.5.5 0 01.5.5v3a.5.5 0 01-.5.5h-3a.5.5 0 01-.5-.5V6a.5.5 0 01.5-.5zM13 6a2 2 0 012-2h3a2 2 0 012 2v3a2 2 0 01-2 2h-3a2 2 0 01-2-2V6zm5 8.5h-3a.5.5 0 00-.5.5v3a.5.5 0 00.5.5h3a.5.5 0 00.5-.5v-3a.5.5 0 00-.5-.5zM15 13a2 2 0 00-2 2v3a2 2 0 002 2h3a2 2 0 002-2v-3a2 2 0 00-2-2h-3zm-9 1.5h3a.5.5 0 01.5.5v3a.5.5 0 01-.5.5H6a.5.5 0 01-.5-.5v-3a.5.5 0 01.5-.5zM4 15a2 2 0 012-2h3a2 2 0 012 2v3a2 2 0 01-2 2H6a2 2 0 01-2-2v-3z\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\"\n}));\nexport default category;\n//# sourceMappingURL=category.js.map","import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst pin = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"m21.5 9.1-6.6-6.6-4.2 5.6c-1.2-.1-2.4.1-3.6.7-.1 0-.1.1-.2.1-.5.3-.9.6-1.2.9l3.7 3.7-5.7 5.7v1.1h1.1l5.7-5.7 3.7 3.7c.4-.4.7-.8.9-1.2.1-.1.1-.2.2-.3.6-1.1.8-2.4.6-3.6l5.6-4.1zm-7.3 3.5.1.9c.1.9 0 1.8-.4 2.6l-6-6c.8-.4 1.7-.5 2.6-.4l.9.1L15 4.9 19.1 9l-4.9 3.6z\"\n}));\nexport default pin;\n//# sourceMappingURL=pin.js.map","/**\r\n * External dependencies\r\n */\r\nimport {unescape} from 'lodash';\r\nimport classnames from 'classnames';\r\nimport {useTaxonomiesInfo, usePostTypes} from './utils'\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport {\r\n    PanelBody,\r\n    Placeholder,\r\n    Spinner,\r\n    ToggleControl,\r\n    VisuallyHidden,\r\n    SelectControl\r\n} from '@wordpress/components';\r\nimport {useInstanceId} from '@wordpress/compose';\r\nimport {InspectorControls, useBlockProps} from '@wordpress/block-editor';\r\nimport {__} from '@wordpress/i18n';\r\nimport {pin} from '@wordpress/icons';\r\nimport {__experimentalUseEntityRecords} from '@wordpress/core-data';\r\n\r\nexport default function Edit({attributes, setAttributes, className}) {\r\n    const {\r\n        displayAsDropdown,\r\n        showHierarchy,\r\n        showPostCounts,\r\n        showOnlyTopLevel,\r\n        showEmpty,\r\n        taxonomyCategory,\r\n        showOptionAll,\r\n        postType\r\n    } = attributes;\r\n\r\n    const {postTypesTaxonomiesMap, postTypesSelectOptions} = usePostTypes();\r\n\r\n    let listTaxonomies = useTaxonomiesInfo(postType);\r\n\r\n\r\n    const selectId = useInstanceId(Edit, 'blocks-category-select');\r\n\r\n    const query = {per_page: -1, hide_empty: !showEmpty, context: 'view'};\r\n\r\n    if (showOnlyTopLevel) {\r\n        query.parent = 0;\r\n    }\r\n\r\n    const {records: categories, isResolving} = __experimentalUseEntityRecords(\r\n        'taxonomy',\r\n        taxonomyCategory,\r\n        query\r\n    );\r\n\r\n    const getCategoriesList = (parentId) => {\r\n        if (!categories?.length) {\r\n            return [];\r\n        }\r\n        if (parentId === null) {\r\n            return categories;\r\n        }\r\n        return categories.filter(({parent}) => parent === parentId);\r\n    };\r\n\r\n    const toggleAttribute = (attributeName) => (newValue) =>\r\n        setAttributes({[attributeName]: newValue});\r\n\r\n    const renderCategoryName = (name) =>\r\n        !name ? __('(Untitled)') : unescape(name).trim();\r\n\r\n    const renderCategoryList = () => {\r\n        const parentId = showHierarchy ? 0 : null;\r\n        let categoriesList = getCategoriesList(parentId);\r\n        return categoriesList.map((category) =>\r\n            renderCategoryListItem(category, 0)\r\n        );\r\n    };\r\n\r\n    const renderCategoryListItem = (category) => {\r\n        const childCategories = getCategoriesList(category.id);\r\n        const {id, link, count, name} = category;\r\n        return (\r\n            <li key={id} className={`cat-item cat-item-${id}`}>\r\n                <a href={link} target=\"_blank\" rel=\"noreferrer noopener\">\r\n                    {renderCategoryName(name)}\r\n                </a>\r\n                {showPostCounts && ` (${count})`}\r\n                {showHierarchy && !!childCategories.length && (\r\n                    <ul className=\"children dssadsd\">\r\n                        {childCategories.map((childCategory) =>\r\n                            renderCategoryListItem(childCategory)\r\n                        )}\r\n                    </ul>\r\n                )}\r\n            </li>\r\n        );\r\n    };\r\n\r\n    const renderCategoryDropdown = () => {\r\n        const parentId = showHierarchy ? 0 : null;\r\n        const categoriesList = getCategoriesList(parentId);\r\n        return (\r\n            <>\r\n                <VisuallyHidden as=\"label\" htmlFor={selectId}>\r\n                    {__('Categories')}\r\n                </VisuallyHidden>\r\n                <select id={selectId}>\r\n                    <option>{__('Select Category')}</option>\r\n                    {categoriesList.map((category) =>\r\n                        renderCategoryDropdownItem(category, 0)\r\n                    )}\r\n                </select>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const renderCategoryDropdownItem = (category, level) => {\r\n        const {id, count, name} = category;\r\n        const childCategories = getCategoriesList(id);\r\n        return [\r\n            <option key={id} className={`level-${level}`}>\r\n                {Array.from({length: level * 3}).map(() => '\\xa0')}\r\n                {renderCategoryName(name)}\r\n                {showPostCounts && ` (${count})`}\r\n            </option>,\r\n            showHierarchy &&\r\n            !!childCategories.length &&\r\n            childCategories.map((childCategory) =>\r\n                renderCategoryDropdownItem(childCategory, level + 1)\r\n            ),\r\n        ];\r\n    };\r\n\r\n    const TagName =\r\n        !!categories?.length && !displayAsDropdown && !isResolving\r\n            ? 'ul'\r\n            : 'div';\r\n\r\n    const classes = classnames(className, {\r\n        'wp-block-categories-list':\r\n            !!categories?.length && !displayAsDropdown && !isResolving,\r\n        'wp-block-categories-dropdown':\r\n            !!categories?.length && displayAsDropdown && !isResolving,\r\n    });\r\n\r\n    const blockProps = useBlockProps({\r\n        className: classes,\r\n    });\r\n\r\n    const onPostTypeChange = ( postType ) => {\r\n        setAttributes({postType});\r\n        const supportedTaxonomies = postTypesTaxonomiesMap[ postType ];\r\n        setAttributes({taxonomyCategory: supportedTaxonomies[0]});\r\n    };\r\n\r\n    return (\r\n        <TagName {...blockProps}>\r\n            <InspectorControls>\r\n                <PanelBody title={__('Settings')}>\r\n                    <ToggleControl\r\n                        label={__('Display as dropdown')}\r\n                        checked={displayAsDropdown}\r\n                        onChange={toggleAttribute('displayAsDropdown')}\r\n                    />\r\n                    <ToggleControl\r\n                        label={__('Show post counts')}\r\n                        checked={showPostCounts}\r\n                        onChange={toggleAttribute('showPostCounts')}\r\n                    />\r\n                    <ToggleControl\r\n                        label={__('Show only top level categories')}\r\n                        checked={showOnlyTopLevel}\r\n                        onChange={toggleAttribute('showOnlyTopLevel')}\r\n                    />\r\n                    <ToggleControl\r\n                        label={__('Show empty categories')}\r\n                        checked={showEmpty}\r\n                        onChange={toggleAttribute('showEmpty')}\r\n                    />\r\n                    {!showOnlyTopLevel && (\r\n                        <ToggleControl\r\n                            label={__('Show hierarchy')}\r\n                            checked={showHierarchy}\r\n                            onChange={toggleAttribute('showHierarchy')}\r\n                        />\r\n                    )}\r\n                    <ToggleControl\r\n                        label={__('Show option All')}\r\n                        checked={showOptionAll}\r\n                        onChange={toggleAttribute('showOptionAll')}\r\n                    />\r\n                    <SelectControl\r\n                        options={postTypesSelectOptions}\r\n                        value={postType}\r\n                        onChange={onPostTypeChange}\r\n                        label={__('Post type')}\r\n                        help={__(\r\n                            'WordPress contains different types of content and they are divided into collections called “Post types”. By default there are a few different ones such as blog posts and pages, but plugins could add more.'\r\n                        )}\r\n                    />\r\n                    <SelectControl\r\n                        label={__('Taxonomy')}\r\n                        value={taxonomyCategory}\r\n                        options={listTaxonomies}\r\n                        onChange={(taxonomyCategory) => {\r\n                            setAttributes({taxonomyCategory});\r\n                        }}\r\n                    />\r\n                </PanelBody>\r\n            </InspectorControls>\r\n            {isResolving && (\r\n                <Placeholder icon={pin} label={__('Categories')}>\r\n                    <Spinner/>\r\n                </Placeholder>\r\n            )}\r\n            {!isResolving && categories?.length === 0 && (\r\n                <p>\r\n                    {__(\r\n                        'Your site does not have any posts, so there is nothing to display here at the moment.'\r\n                    )}\r\n                </p>\r\n            )}\r\n            {!isResolving &&\r\n                categories?.length > 0 &&\r\n                (displayAsDropdown\r\n                    ? renderCategoryDropdown()\r\n                    : renderCategoryList())}\r\n        </TagName>\r\n    );\r\n}\r\n","import {useSelect} from '@wordpress/data';\r\nimport {store as coreStore} from '@wordpress/core-data';\r\nimport { useMemo } from '@wordpress/element';\r\n\r\n\r\nconst useTaxonomies = ( postType ) => {\r\n    const taxonomies = useSelect(\r\n        ( select ) => {\r\n            const { getTaxonomies } = select( coreStore );\r\n            const filteredTaxonomies = getTaxonomies( {\r\n                type: postType,\r\n                per_page: -1,\r\n                context: 'view',\r\n            } );\r\n            return filteredTaxonomies;\r\n        },\r\n        [ postType ]\r\n    );\r\n    return taxonomies;\r\n};\r\n\r\n\r\nexport const useTaxonomiesInfo = ( postType ) => {\r\n    const taxonomies = useTaxonomies( postType );\r\n    return taxonomies?.map(({slug, name}) => {\r\n        return {\r\n            label: `${name} (${slug})`,\r\n            value: slug\r\n        };\r\n    });\r\n};\r\n\r\nexport const usePostTypes = () => {\r\n    const postTypes = useSelect( ( select ) => {\r\n        const { getPostTypes } = select( coreStore );\r\n        const excludedPostTypes = [ 'attachment' ];\r\n        const filteredPostTypes = getPostTypes( { per_page: -1 } )?.filter(\r\n            ( { viewable, slug } ) =>\r\n                viewable && ! excludedPostTypes.includes( slug )\r\n        );\r\n        return filteredPostTypes;\r\n    }, [] );\r\n    const postTypesTaxonomiesMap = useMemo( () => {\r\n        if ( ! postTypes?.length ) return;\r\n        return postTypes.reduce( ( accumulator, type ) => {\r\n            accumulator[ type.slug ] = type.taxonomies;\r\n            return accumulator;\r\n        }, {} );\r\n    }, [ postTypes ] );\r\n    const postTypesSelectOptions = useMemo(\r\n        () =>\r\n            ( postTypes || [] ).map( ( { labels, slug } ) => ( {\r\n                label: labels.singular_name,\r\n                value: slug,\r\n            } ) ),\r\n        [ postTypes ]\r\n    );\r\n\r\n    return { postTypesTaxonomiesMap, postTypesSelectOptions };\r\n};\r\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","module.exports = window[\"lodash\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"primitives\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * WordPress dependencies\r\n */\r\nimport { category as icon } from '@wordpress/icons';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport metadata from './block.json';\r\nimport edit from './edit';\r\nimport { registerBlockType } from '@wordpress/blocks';\r\n\r\nregisterBlockType( metadata.name, {\r\n\ticon,\r\n\texample: {},\r\n\tedit\r\n} );\r\n"],"names":["unescape","classnames","useTaxonomiesInfo","usePostTypes","PanelBody","Placeholder","Spinner","ToggleControl","VisuallyHidden","SelectControl","useInstanceId","InspectorControls","useBlockProps","__","pin","__experimentalUseEntityRecords","Edit","attributes","setAttributes","className","displayAsDropdown","showHierarchy","showPostCounts","showOnlyTopLevel","showEmpty","taxonomyCategory","showOptionAll","postType","postTypesTaxonomiesMap","postTypesSelectOptions","listTaxonomies","selectId","query","per_page","hide_empty","context","parent","records","categories","isResolving","getCategoriesList","parentId","length","filter","toggleAttribute","attributeName","newValue","renderCategoryName","name","trim","renderCategoryList","categoriesList","map","category","renderCategoryListItem","childCategories","id","link","count","childCategory","renderCategoryDropdown","renderCategoryDropdownItem","level","Array","from","TagName","classes","blockProps","onPostTypeChange","supportedTaxonomies","useSelect","store","coreStore","useMemo","useTaxonomies","taxonomies","select","getTaxonomies","filteredTaxonomies","type","slug","label","value","postTypes","getPostTypes","excludedPostTypes","filteredPostTypes","viewable","includes","reduce","accumulator","labels","singular_name","icon","metadata","edit","registerBlockType","example"],"sourceRoot":""}